import{_ as n,p as s,q as a,a1 as e}from"./framework-c8e009f3.js";const p={},t=e(`<h2 id="操作符" tabindex="-1"><a class="header-anchor" href="#操作符" aria-hidden="true">#</a> 操作符</h2><h3 id="逻辑运算" tabindex="-1"><a class="header-anchor" href="#逻辑运算" aria-hidden="true">#</a> 逻辑运算</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">and</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 3 与</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">or</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 1 或</span>
<span class="token keyword">if</span> <span class="token keyword">not</span> a <span class="token operator">==</span> <span class="token number">3</span> <span class="token punctuation">:</span>  <span class="token comment"># 非</span>
   <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token keyword">print</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> 运算符</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">10</span> <span class="token operator">/</span> <span class="token number">3</span>  <span class="token comment"># 3.33333</span>
<span class="token number">10</span> <span class="token operator">//</span> <span class="token number">3</span>  <span class="token comment"># 3 想下取整</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="赋值" tabindex="-1"><a class="header-anchor" href="#赋值" aria-hidden="true">#</a> 赋值</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
b <span class="token operator">=</span> <span class="token number">2</span>

<span class="token comment"># 我们假设计算一个斐波拉契数列，结果应该是a = 2 , b = 3</span>
<span class="token comment"># 写法一</span>
temp <span class="token operator">=</span> b
b <span class="token operator">=</span> temp <span class="token operator">+</span> a
a <span class="token operator">=</span> temp

<span class="token comment"># 写法二</span>
temp <span class="token operator">=</span> <span class="token punctuation">(</span>b<span class="token punctuation">,</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span>
a <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
b <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>

<span class="token comment"># 写法三</span>
a<span class="token punctuation">,</span>b <span class="token operator">=</span> b <span class="token punctuation">,</span> a<span class="token operator">+</span>b

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查找" tabindex="-1"><a class="header-anchor" href="#查找" aria-hidden="true">#</a> 查找</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;xiaoming&#39;</span> <span class="token punctuation">,</span> <span class="token string">&#39;xiaohong&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;xiaozhang&#39;</span> <span class="token keyword">in</span> name<span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">if</span> <span class="token string">&#39;xiaohong&#39;</span> <span class="token keyword">in</span> name <span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="切片" tabindex="-1"><a class="header-anchor" href="#切片" aria-hidden="true">#</a> 切片</h3><p>快速切割数组和类数组对象</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># [1]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># [1]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># [3] </span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># [1,2,3] 复制</span>

<span class="token builtin">tuple</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># (1)</span>

<span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>list[x,y]</code> 能够快速取数组的第 x 位到第 y 位</li><li>从头开始时，x 可以省略，到尾结束时，y可以省略</li><li><code>tuple,string</code> 同 <code>list</code></li></ul><h3 id="迭代" tabindex="-1"><a class="header-anchor" href="#迭代" aria-hidden="true">#</a> 迭代</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> key <span class="token keyword">in</span> obj<span class="token punctuation">:</span>  <span class="token comment"># 按键迭代</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>

<span class="token keyword">for</span> value <span class="token keyword">in</span> obj<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 按值迭代</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>

<span class="token keyword">for</span> k<span class="token punctuation">,</span>v <span class="token keyword">in</span> obj<span class="token punctuation">:</span> <span class="token comment"># 按键值迭代</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>k <span class="token punctuation">,</span> v<span class="token punctuation">)</span> 

<span class="token keyword">from</span> collections<span class="token punctuation">.</span>abc <span class="token keyword">import</span> Iterable

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span> <span class="token punctuation">,</span> Iterable<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 是否可迭代</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三目运算符" tabindex="-1"><a class="header-anchor" href="#三目运算符" aria-hidden="true">#</a> 三目运算符</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">const</span> res <span class="token operator">=</span> a <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&#39;正数&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;非正数&#39;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
res <span class="token operator">=</span> <span class="token string">&#39;正数&#39;</span> <span class="token keyword">if</span> a <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">&#39;非正数&#39;</span> 
<span class="token comment"># 正常结果 【判断语句】 异常结果 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="if-else-简写" tabindex="-1"><a class="header-anchor" href="#if-else-简写" aria-hidden="true">#</a> if-else 简写</h3><p><strong>赋值语句</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>status <span class="token operator">=</span> <span class="token string">&quot;completed&quot;</span>

<span class="token keyword">if</span> status <span class="token operator">==</span> <span class="token string">&quot;loading&quot;</span><span class="token punctuation">:</span>
   ready <span class="token operator">=</span> <span class="token boolean">False</span>
<span class="token keyword">elif</span> status <span class="token operator">==</span> <span class="token string">&quot;rejected&quot;</span><span class="token punctuation">:</span>
   ready <span class="token operator">=</span> <span class="token boolean">False</span>
<span class="token keyword">else</span> <span class="token punctuation">:</span>
   ready <span class="token operator">=</span> <span class="token boolean">True</span>

<span class="token comment"># 简写</span>
ready <span class="token operator">=</span> <span class="token boolean">False</span> <span class="token keyword">if</span> status <span class="token operator">==</span> <span class="token string">&quot;loading&quot;</span> <span class="token keyword">else</span> <span class="token boolean">False</span> <span class="token keyword">if</span> status <span class="token operator">==</span> <span class="token string">&quot;rejected&quot;</span> <span class="token keyword">else</span> <span class="token boolean">True</span>  

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>断句为：</p><ul><li>ready =</li><li>False if status == &quot;loading&quot;</li><li>else</li><li>False if status == &quot;rejected&quot;</li><li>else</li><li>True</li></ul><h3 id="列表生成" tabindex="-1"><a class="header-anchor" href="#列表生成" aria-hidden="true">#</a> 列表生成</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token operator">*</span> x <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment"># [for前面的内容会被视为表达式]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>  <span class="token comment"># [1, 4, 9]</span>

<span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token operator">*</span> x <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">if</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 后面的被视为条件</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>  <span class="token comment"># [4]</span>

<span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span>m <span class="token operator">+</span> n <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token string">&#39;AB&#39;</span> <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token string">&quot;DE&quot;</span><span class="token punctuation">]</span>  <span class="token comment"># 全排列</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>  <span class="token comment"># [&#39;AD&#39;, &#39;AE&#39;, &#39;BD&#39;, &#39;BE&#39;]</span>


obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span>
<span class="token comment"># [(&#39;foo&#39;, 1), (&#39;bar&#39;, 2)] 生成c++ pair结构数组</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">[</span>value <span class="token keyword">for</span> value <span class="token keyword">in</span> obj<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token builtin">str</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">[</span>s<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> s <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 快速处理每一个item [&#39;hello&#39;, &#39;world&#39;]</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成器" tabindex="-1"><a class="header-anchor" href="#生成器" aria-hidden="true">#</a> 生成器</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>g <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">*</span> x <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 将列表生成器的[]转化成()就是生成器</span>


<span class="token keyword">def</span> <span class="token function">fib</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 带 yield 的就是生成器</span>
    n<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span>
    <span class="token keyword">while</span> n <span class="token operator">&lt;</span> num<span class="token punctuation">:</span>
        <span class="token keyword">yield</span> b
        n <span class="token operator">+=</span> <span class="token number">1</span>
        a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a<span class="token operator">+</span>b
    <span class="token keyword">return</span> <span class="token string">&#39;done&#39;</span>


<span class="token keyword">for</span> n <span class="token keyword">in</span> fib<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 通过for in 获取yield的值</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>

g <span class="token operator">=</span> fib<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>


<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">next</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 通过next(生成器)获取yield的值</span>
    <span class="token keyword">except</span> StopIteration <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;return :&quot;</span> <span class="token punctuation">,</span> e<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment"># 最后一次调用会报错，用错误捕获拿到return值</span>
        <span class="token keyword">break</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pass" tabindex="-1"><a class="header-anchor" href="#pass" aria-hidden="true">#</a> pass</h3><p>空语句，占位符</p>`,29),o=[t];function l(c,i){return s(),a("div",null,o)}const r=n(p,[["render",l],["__file","02.操作符.html.vue"]]);export{r as default};
