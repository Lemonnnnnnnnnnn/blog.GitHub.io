import{_ as e,M as o,p as l,q as t,R as s,t as n,N as c,a1 as p}from"./framework-c8e009f3.js";const d={},i=s("h2",{id:"参考教程",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#参考教程","aria-hidden":"true"},"#"),n(" 参考教程")],-1),r={href:"https://www.liaoxuefeng.com/wiki/1177760294764384",target:"_blank",rel:"noopener noreferrer"},u=p(`<h2 id="mysql-client-和-mysql-server" tabindex="-1"><a class="header-anchor" href="#mysql-client-和-mysql-server" aria-hidden="true">#</a> MySQL Client 和 MySQL Server</h2><p>用户可以在客户端通过命令<code>mysql -h id地址 -u root -p 密码</code> 登录服务端的3306端口（默认），如果没有填写-h地址，则默认连接本机ip地址：<code>127.0.0.1:3306</code>。客户端和服务端通过Tcp握手连接。</p><h4 id="命令行" tabindex="-1"><a class="header-anchor" href="#命令行" aria-hidden="true">#</a> 命令行</h4><p>服务端的sql指令不是<code>mysql</code> 而是 <code>mysqld</code></p><h2 id="术语" tabindex="-1"><a class="header-anchor" href="#术语" aria-hidden="true">#</a> 术语</h2><p><strong>SQL</strong> : <code>structured query language</code> 结构化查询语言，用来访问和操作数据库系统。</p><p><strong>DDL</strong> : <code>data definition language</code> 数据定义语言，操作表，通常由管理员执行</p><p><strong>DML</strong> ： <code>data manipulation language</code> 数据操作语言，操作表内数据，<strong>增删改</strong></p><p><strong>DQL</strong> : <code>data query language</code> 数据查询语言，<strong>查</strong></p><p><strong>record</strong> : 记录，表的每一行记录</p><p><strong>column</strong> : 字段，表的每一列</p><p><strong>主键</strong> : 每一条记录，每一行的key值，唯一</p><p><strong>外键</strong>： 通过一个字段来关联另一张表，这个字段称为外键</p><p><strong>索引</strong> ： 为某一列创建索引可以加快查找速度，但减缓增删改的速度；主键默认创建索引</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> students
<span class="token keyword">ADD</span> <span class="token keyword">INDEX</span> idx_score <span class="token punctuation">(</span>score<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>为 <code>score</code> 列创建了一个名为 <code>idx_score</code> 的索引</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> students
<span class="token keyword">ADD</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> uni_name <span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果某个字段不能有重复的值（比如身份证），可以创建一个 <em>唯一索引</em></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> students
<span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> uni_name <span class="token keyword">UNIQUE</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果希望保持唯一性但不创建索引，可以添加一个唯一约束 <code>constraint</code> ：</p><h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><ul><li>INT</li><li>BIGINT</li><li>REAL/FLOAT</li><li>DOUBLE</li><li>DECIMAL(M,N) : 高精度小数，例：DECIMAL(20,10) 表示总共20位，小数占10位</li><li>CHAR(N) : 字符串</li><li>VARCHAR(N) : 变长字符串，例：VARCHAR(100)可以存储0-100个字符的字符串</li><li>BOOLEAN</li><li>DATE : 存储日期，例： 2018-06-22</li><li>TIME : 存储时间，例：12:20:59</li><li>DATETIME ： 存储日期+ 时间 ， 例： 2018-06-22 12:20:59</li></ul><h2 id="创建用户与授权" tabindex="-1"><a class="header-anchor" href="#创建用户与授权" aria-hidden="true">#</a> 创建用户与授权</h2><h3 id="创建用户" tabindex="-1"><a class="header-anchor" href="#创建用户" aria-hidden="true">#</a> 创建用户</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token punctuation">[</span>username<span class="token punctuation">]</span>@<span class="token punctuation">[</span>host<span class="token punctuation">]</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token punctuation">[</span>password<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>解析：</strong></p><ul><li><code>username</code>：你将创建的用户名</li><li><code>host</code>：指定该用户在哪个主机上可以登陆，如果是本地用户可用localhost，如果想让该用户可以从任意远程主机登陆，可以使用通配符%</li><li><code>password</code>：该用户的登陆密码，密码可以为空，如果为空则该用户可以不需要密码登陆服务器</li></ul><p><strong>示例：</strong></p><p>如果不存在用户learn，则创建一个用户 <em>learn</em> ，密码为 <em>learnpassword</em> ：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> learn<span class="token variable">@&#39;%&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;learnpassword&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="授权" tabindex="-1"><a class="header-anchor" href="#授权" aria-hidden="true">#</a> 授权</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">GRANT</span> <span class="token punctuation">[</span><span class="token keyword">privileges</span><span class="token punctuation">]</span> <span class="token keyword">ON</span> <span class="token punctuation">[</span>databasename<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">[</span>tablename<span class="token punctuation">]</span> <span class="token keyword">TO</span> <span class="token punctuation">[</span>username<span class="token punctuation">]</span>@<span class="token punctuation">[</span>host<span class="token punctuation">]</span> <span class="token keyword">WITH</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span><span class="token punctuation">;</span>
FLUSH <span class="token keyword">PRIVILEGES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解析：</strong></p><ul><li><code>GRANT</code> : 要使用 <code>GRANT</code> 语句，用户必须具有 <code>GRANT OPTION</code> 权限</li><li><code>privileges</code>：用户的操作权限，如SELECT，INSERT，UPDATE等，如果要授予所的权限则使用ALL</li><li><code>databasename</code>：数据库名</li><li><code>tablename</code>：表名，如果要授予该用户对所有数据库和表的相应操作权限则可用<em>表示，如</em>.*</li><li><code>WITH GRANT OPTION</code> ：授予该用户<code>GRANT OPTION</code> 权限，即允许该用户向其他用户授予权限</li><li><code>FLUSH PRIVILEGES</code> : 刷新权限让权限生效</li></ul><p><strong>示例：</strong></p><p>授予 <code>learn</code> 用户访问 <code>learnjdbc</code> 数据库所有表的所有权限，并且赋予该用户<code>GRANT OPTION</code>权限：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> learnjdbc<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> learn<span class="token variable">@&#39;%&#39;</span> <span class="token keyword">WITH</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span><span class="token punctuation">;</span>
FLUSH <span class="token keyword">PRIVILEGES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,37);function k(g,m){const a=o("ExternalLinkIcon");return l(),t("div",null,[i,s("p",null,[s("a",r,[n("廖雪峰的mysql教程"),c(a)])]),u])}const v=e(d,[["render",k],["__file","01.起步.html.vue"]]);export{v as default};
