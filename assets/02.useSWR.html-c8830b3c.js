import{_ as t,M as e,p as o,q as p,R as n,t as s,N as c,a1 as r}from"./framework-c8e009f3.js";const l={},i=r(`<p><code>useSWR</code> 是 <em>swr</em> 的核心方法，它负责请求数据、缓存数据、刷新最新数据、获取请求状态等等。</p><h2 id="结构" tabindex="-1"><a class="header-anchor" href="#结构" aria-hidden="true">#</a> 结构</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> error<span class="token punctuation">,</span> isValidating<span class="token punctuation">,</span> mutate <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSWR</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> fetcher<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><ul><li><strong>key</strong>: 请求的唯一 <code>key</code></li><li><strong>fetcher</strong>:（可选）一个请求数据的 <code>Promise</code> 返回函数</li><li><strong>options</strong>:（可选）方法配置</li></ul><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h4><ul><li><strong>data</strong> : 请求数据，完成时是为 <em>undefined</em></li><li><strong>error</strong> : fetcher抛出的错误，完成时是为 <em>undefined</em></li><li><strong>isValidating</strong> : 请求状态</li><li><strong>mutate</strong> : 刷新获取最新数据</li></ul><p>一个例子说明 <code>isValidating</code> 和 <code>mutate</code> 的使用：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> useSWR <span class="token keyword">from</span> <span class="token string">&#39;swr&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">fetcher</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fetch</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 随机获取一张图片</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> error<span class="token punctuation">,</span> mutate<span class="token punctuation">,</span> isValidating <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSWR</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://animechan.vercel.app/api/random</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> fetcher<span class="token punctuation">)</span>  <span class="token comment">// useSWR的第一个参数会传入fetcher方法中</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>error<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;loading...&#39;</span>

    <span class="token keyword">const</span> status <span class="token operator">=</span> isValidating <span class="token operator">?</span> <span class="token string">&#39;正在加载数据...&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;加载完成&#39;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span> <span class="token punctuation">{</span>data<span class="token punctuation">.</span>anime<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>status<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>mutate<span class="token punctuation">}</span><span class="token operator">&gt;</span>刷新数据<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://linyc.oss-cn-beijing.aliyuncs.com/useSwr.gif" alt=""></p><h4 id="选项" tabindex="-1"><a class="header-anchor" href="#选项" aria-hidden="true">#</a> 选项</h4><ul><li><strong>revalidateOnFocus = true</strong> : 窗口聚焦时自动重新验证</li><li><strong>refreshInterval = 0</strong> : 定时查询最新数据，默认关闭</li><li><strong>shouldRetryOnError = true</strong> : fetcher 有错误时重试</li><li><strong>dedupingInterval = 2000</strong>: 删除一段时间内相同 key 的重复请求（以毫秒为单位）</li><li><strong>fallbackData</strong> ： 自定义返回的数据格式</li></ul>`,12),u={href:"https://swr.bootcss.com/docs/options",target:"_blank",rel:"noopener noreferrer"};function d(k,v){const a=e("ExternalLinkIcon");return o(),p("div",null,[i,n("p",null,[s("其他配置选项参考"),n("a",u,[s("官网"),c(a)])])])}const g=t(l,[["render",d],["__file","02.useSWR.html.vue"]]);export{g as default};
