import{_ as n,p as s,q as a,a1 as t}from"./framework-c8e009f3.js";const p={},o=t(`<h2 id="名词解释" tabindex="-1"><a class="header-anchor" href="#名词解释" aria-hidden="true">#</a> 名词解释</h2><p>以下的unicode编码在浏览器中不显示：</p><ul><li>零宽空格（zero-width space, ZWSP）用于可能需要换行处。 <ul><li>Unicode: U+200B HTML: ​</li></ul></li><li>零宽不连字 (zero-width non-joiner，ZWNJ)放在电子文本的两个字符之间，抑制本来会发生的连字，而是以这两个字符原本的字形来绘制。 <ul><li>Unicode: U+200C HTML: ‌</li></ul></li><li>零宽连字（zero-width joiner，ZWJ）是一个控制字符，放在某些需要复杂排版语言（如阿拉伯语、印地语）的两个字符之间，使得这两个本不会发生连字的字符产生了连字效果。 <ul><li>Unicode: U+200D HTML: ‍</li></ul></li></ul><h2 id="html" tabindex="-1"><a class="header-anchor" href="#html" aria-hidden="true">#</a> HTML</h2><ol><li>要加密的数据每个字符串都转成二进制，各个字符串之间用空格分隔</li><li>用零宽不连字 <strong>‌</strong> 替代二进制中的 <strong>0</strong>，数据加密</li><li>用不换行空格 <strong>​</strong> 替代二进制中的 <strong>1</strong>，数据加密</li><li>用零宽连字 <strong>‍</strong> 代替二进制中的分隔符空格，将字符连接到一起</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">binaryToZeroWidth</span> <span class="token operator">=</span> <span class="token parameter">binary</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    binary<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">binaryNum</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>binaryNum<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&#39;&amp;ZeroWidthSpace;&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 零宽空白，用于加密；解密相反</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&#39;&amp;zwnj;&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 零宽不连字，用于加密；解密相反</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">&#39;&amp;zwj;&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 分隔符空格换成零宽连字，用于连接</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 转成字符串</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 字符串转二进制，各个字符串之间逗号分割</span>
<span class="token keyword">function</span> <span class="token function">strToBinary</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> list <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> binaryList <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 每个字符串先转成unicode编码，再转成二进制字符串</span>
    <span class="token keyword">return</span> binaryList<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token comment">// 用空格分隔</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> username <span class="token operator">=</span> <span class="token string">&#39;abc&#39;</span>
<span class="token keyword">const</span> sourceData <span class="token operator">=</span> <span class="token string">&quot;lll&quot;</span>

<span class="token keyword">const</span> encryptionData <span class="token operator">=</span> <span class="token function">binaryToZeroWidth</span><span class="token punctuation">(</span><span class="token function">strToBinary</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> resStr <span class="token operator">=</span> sourceData <span class="token operator">+</span> encryptionData
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window如何通过unicode编码输入字符" tabindex="-1"><a class="header-anchor" href="#window如何通过unicode编码输入字符" aria-hidden="true">#</a> window如何通过unicode编码输入字符</h2><ol><li>微软拼音输入法，输入VUC*即可</li><li>https://unicode-explorer.com/articles/how-to-type-unicode-characters-in-windows</li></ol><h2 id="查询unicode字符" tabindex="-1"><a class="header-anchor" href="#查询unicode字符" aria-hidden="true">#</a> 查询unicode字符</h2><p>https://unicode-table.com/cn/200B/</p>`,10),e=[o];function c(i,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","01.零宽字符.html.vue"]]);export{r as default};
