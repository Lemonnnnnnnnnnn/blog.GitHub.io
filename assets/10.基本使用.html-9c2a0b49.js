import{_ as e,p as o,q as d,a1 as c}from"./framework-c8e009f3.js";const l={},i=c(`<h2 id="常用指令" tabindex="-1"><a class="header-anchor" href="#常用指令" aria-hidden="true">#</a> 常用指令</h2><ul><li>递归删除文件夹 <code>rm -rf 目录名字</code>.</li><li>复制 ： <code>cp 源文件 目标文件(夹).</code></li><li>后台运行：<code>nohup [命令] &amp;</code> ，其中 <code>&amp;</code> 表示让命令在后台执行，终端退出后命令仍旧执行。</li><li>切换成系统用户 ： <code>sudo su root</code> 或 <code>sudo -i</code></li><li>上传文件到服务器上 <code>scp [本地路径] [服务器username]@[服务器IP地址]:[服务器路径]</code></li><li>查找已安装软件 <code>dpkg -l | grep -i [软件包名]</code></li><li>安装软件 <code>apt-get install [包名]</code></li><li>卸载软件 <code>apt-get remove [包名]</code></li><li><code>pwd</code>: 当前路径<code>~</code> : 表示代码主目录，也就是当前登录用户的用户目录。 例如：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~  <span class="token comment"># root@VM-12-7-ubuntu:~#</span>
<span class="token builtin class-name">pwd</span>    <span class="token comment"># /root</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>重启：<code>sudo shutdown -r now</code> 或 <code>sudo reboot</code></li></ul><h3 id="解压命令" tabindex="-1"><a class="header-anchor" href="#解压命令" aria-hidden="true">#</a> 解压命令</h3><p><strong>解压 <code>.tar</code> 文件：</strong></p><p><code>tar -xvf 文件名</code> - x 解压 - v 显示执行过程 - f 指定备份文件</p><p><strong>解压 <code>.gz</code> 文件：</strong></p><p><code>gzip -d FileName.gz</code> - d 意思为<code>decompress</code></p><p><strong>解压 <code>.xz</code> 文件：</strong></p><ol><li><code>xz -d xxx.xz</code> 解压成.tar</li><li><code>tar -xvf xxx.tar</code> 解压成普通文件</li></ol><h3 id="安装命令" tabindex="-1"><a class="header-anchor" href="#安装命令" aria-hidden="true">#</a> 安装命令</h3><ol><li><code>./configure</code> : 为编译做好准备；</li><li><code>make</code> 进行软件编译；</li><li><code>make install</code> 完成安装；</li></ol><h3 id="别名" tabindex="-1"><a class="header-anchor" href="#别名" aria-hidden="true">#</a> 别名</h3><ul><li>设置别名： <code>alias .. = ‘cd ..’</code></li><li>取消别名：<code>unalias ..</code></li><li>查看别名：<code>type -a ..</code></li></ul><h3 id="查看" tabindex="-1"><a class="header-anchor" href="#查看" aria-hidden="true">#</a> 查看</h3><ul><li>查看所有文件，包括**.**开头的隐藏文件 ： <code>ls -a</code></li><li>查看权限 <code>ls -l 文件（夹）</code></li><li>查看运行的所有进程 ： <code>ps aux</code><ul><li>a：显示当前终端下的所有进程信息，包括其他用户的进程。</li><li>u：使用以用户为主的格式输出进程信息。</li><li>x：显示当前用户在所有终端下的进程。</li></ul></li><li>查看端口占用情况：<code>lsof -i:端口号</code>，更多 lsof 的命令如下： <ul><li><code>lsof -i:8080</code>：查看8080端口占用</li><li><code>lsof abc.txt</code>：显示开启文件abc.txt的进程</li><li><code>lsof -c abc</code>：显示abc进程现在打开的文件</li><li><code>lsof -c -p 1234</code>：列出进程号为1234的进程所打开的文件</li><li><code>lsof +d /usr/local/</code>：显示目录下被进程开启的文件</li><li><code>lsof +D /usr/local/</code>：同上，但是会搜索目录下的目录，时间较长</li></ul></li><li>在查到端口占用的进程后，如果你要杀掉对应的进程可以使用 <code>kill</code> 命令：<code>kill -9 PID</code></li></ul><h3 id="读写权限" tabindex="-1"><a class="header-anchor" href="#读写权限" aria-hidden="true">#</a> 读写权限</h3><p>基本语法：<code>chmod [rwx] [路径]</code> ，例如：<code>chmod a+rw file</code> .</p><ul><li>u : User , 文件或目录的拥有者</li><li>a : 所有用户 ,</li><li><ul><li>：增加权限 ,</li></ul></li><li>rw : 读写</li><li>x : 执行或切换权限</li></ul><h3 id="输出与写入" tabindex="-1"><a class="header-anchor" href="#输出与写入" aria-hidden="true">#</a> 输出与写入</h3><p><strong>输出：</strong><code>cat [文件名]</code> ： 打印文件</p><p><strong>覆写：</strong></p><p><code>[命令 &gt; 文件名]</code>：将命令得到的结果<strong>覆写</strong>目标文件中。如：</p><ul><li><code>ls &gt; 123.txt</code>： 将当前目录下的所有文件名写入<code>123.txt</code>文件中</li><li><code>cat 1.txt &gt; 2.txt</code> ：将<code>1.txt</code>的内容写入<code>2.txt</code>中。</li><li><code>echo “123” &gt;2.txt</code> ： 将<code>123</code>写入<code>2.txt</code>中。</li><li><code>cat &gt; [文件名]</code> 覆写文件</li></ul><p><strong>追加：</strong></p><p><code>[命令 &gt;&gt; 文件名]</code> ：将命令得到的结果<strong>追加</strong>到目标文件中。如：<code>cat &gt;&gt; [文件名]</code></p><h3 id="查找" tabindex="-1"><a class="header-anchor" href="#查找" aria-hidden="true">#</a> 查找</h3><h4 id="find-查找文件" tabindex="-1"><a class="header-anchor" href="#find-查找文件" aria-hidden="true">#</a> find 查找文件</h4><p>语法：<code>find path -option [ -print ] [ -exec -ok command ] {} \\;</code></p><p><strong>示例：</strong></p><ul><li><code>find . -name &quot;*.c&quot;</code> : 将当前目录及其子目录下所有文件后缀为 .c 的文件列出来:</li><li><code>find . -type f</code> : 将当前目录及其子目录中的所有文件列出.</li></ul><h4 id="grep" tabindex="-1"><a class="header-anchor" href="#grep" aria-hidden="true">#</a> grep</h4><p><em>grep</em>是一个强大的文本搜索工具，能使用正则表达式搜索文本，并把匹配的行打印出来。</p><p><strong>示例：</strong></p><ul><li><code>grep &quot;match_pattern&quot; file_name</code> : 将文件中的文本作为查找文本，命令会返回所有包含 “match_pattern” 的文本行. （可以不加引号）</li><li><code>ls | grep clash</code> : 将ls输出的结果作为查找文本，查找其中包含&quot;clash&quot; 的文件(夹)名，匹配结果按行输出，一个文件（夹）一行。</li></ul><h2 id="常用快捷键" tabindex="-1"><a class="header-anchor" href="#常用快捷键" aria-hidden="true">#</a> 常用快捷键</h2><ul><li>翻页：空格（<code>space</code>）</li><li>搜索历史记录： <ol><li><code>ctrl + r</code> 进入搜索模式</li><li>键入需要模糊匹配的字符串</li><li>按空格执行当前匹配命令；按 → 键可以修改该命令</li></ol></li><li>光标移动到尾部：<code>ctrl + e</code></li><li>光标移动到首部：<code>ctrl + a</code></li><li>从光标处向左删除至行首：<code>Ctrl + u</code></li><li>回到上次工作的目录：<code>cd -</code></li><li>开启路径自动纠错功能：<code>shopt -s cdspell</code></li></ul>`,38),a=[i];function t(r,s){return o(),d("div",null,a)}const h=e(l,[["render",t],["__file","10.基本使用.html.vue"]]);export{h as default};
