import{_ as i,M as n,p as d,q as s,R as e,t as a,N as c,a1 as r}from"./framework-c8e009f3.js";const t={},p={href:"https://ffmpeg.org/",target:"_blank",rel:"noopener noreferrer"},l=e("h2",{id:"应用场景",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#应用场景","aria-hidden":"true"},"#"),a(" 应用场景")],-1),h=e("h3",{id:"bilibili视频爬取",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#bilibili视频爬取","aria-hidden":"true"},"#"),a(" Bilibili视频爬取")],-1),m={href:"https://shotcut.org/",target:"_blank",rel:"noopener noreferrer"},f=r(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-i</span> video.mp4 <span class="token parameter variable">-i</span> audio.wav <span class="token parameter variable">-c:v</span> copy <span class="token parameter variable">-c:a</span> aac <span class="token parameter variable">-map</span> <span class="token number">0</span>:v:0 <span class="token parameter variable">-map</span> <span class="token number">1</span>:a:0 output.mp4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接下来我们一步一步解析上面这一长串代码。</p><p>ffmpeg 调用的格式为 <code>ffmpeg [options] [[infile options] -i infile]... {[outfile options] outfile}...</code> .</p><h4 id="i" tabindex="-1"><a class="header-anchor" href="#i" aria-hidden="true">#</a> <code>-i</code></h4><p><code>-i</code> 是 <code>-input</code> 的简写，表示输入文件</p><p><code>-i video.mp4 -i audio.wav</code> 输入视频和音频文件</p><h4 id="c" tabindex="-1"><a class="header-anchor" href="#c" aria-hidden="true">#</a> <code>-c</code></h4><p><code>-c</code> 是 <code>-codec</code> 的简写。用 <code>-c:v</code> 表示视频（video）编码器、 <code>-c:a</code> 表示音频（audio）编码器。</p><ul><li><code>-c:v copy</code> : 输出文件的视频格式和输入文件一致</li><li><code>-c:a aac</code> : 输出文件的音频格式为aac</li></ul><h4 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> <code>-map</code></h4><p><code>-map</code> map表示映射，这个参数表示输入文件到输出文件的映射关系.</p><ul><li><code>-map 0:v:0</code> : 将第一个输入文件的视频流作为输出文件的第一个视频流</li><li><code>-map 1:a:0</code> : 将第二个输入文件的音频流作为输出文件的第一个音频流</li></ul>`,12);function u(b,_){const o=n("ExternalLinkIcon");return d(),s("div",null,[e("p",null,[e("a",p,[a("ffmpeg"),c(o)]),a(" 是一个处理媒体文件的命令行工具 (command line based) 。")]),l,h,e("p",null,[a("如果你爬取B站的视频可以发现视频和音频文件是分离的，两者都用mp4格式。如果用 "),e("a",m,[a("shotcut"),c(o)]),a(" 等媒体处理工具合并后导出会花费大量时间（2.5小时的视频大概需要1个小时处理）。而使用 ffmpeg 进行合并则只需要3分钟。而且只需要一行代码：")]),f])}const g=i(t,[["render",u],["__file","ffmpeg.html.vue"]]);export{g as default};
