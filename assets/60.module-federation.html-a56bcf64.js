import{_ as p,M as t,p as o,q as c,R as s,t as n,N as l,a1 as a}from"./framework-c8e009f3.js";const i={},r=a(`<p>大型项目的管理方法一直是编程人员们致力于解决的问题，比如git管理的 <code>submodule</code> 特性，公司架构中的前台-中台设计，其公共的理念都是将重复的东西提取成一些公共的模块，将大项目拆成多个小项目，各自独立开发。而 <strong>微前端</strong> 也是一个相似的概念。</p><p>微前端的实现方法有很多种，而我们在这里以 webpack5 的 <code>module-federation</code> 模块联邦功能来介绍一个最基础的微前端项目是什么样的。</p><h2 id="ui库" tabindex="-1"><a class="header-anchor" href="#ui库" aria-hidden="true">#</a> UI库</h2><p><code>module-federation</code> 允许我们在一个项目中像API一样暴露出一些组件，而其他项目可以通过 <code>http</code> 请求来远程访问这些组件。这个功能十分适合让我们提取一些公共组件到一个单独的项目中。</p><p>我们先编写UI库项目，它和普通项目只有一个区别，那就是在 <code>webpack.config.js</code> 中将自己的组件暴露出去：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//webpack.config.js</span>
<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> ModuleFederationPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>container<span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./main.jsx&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token string">&#39;4000&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token operator">...</span>
        <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;ui_lib&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 组件前缀名是 ui_lib</span>
            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;ui.js&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 组件后缀名是ui.js</span>
            <span class="token literal-property property">exposes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;./components&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./components/index.js&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 将&quot;./components/index.js&quot;中的组件通过路径&quot;./components&quot;暴露出去。</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以看到，模块联邦插件 <code>ModuleFederationPlugin</code> ，它来自 <code>webpack</code> 的 <code>container</code> 组件。这里的意思是，整个项目是一个大的<code>container</code>，它的入口文件是 <code>entry: &#39;./main.jsx&#39;,</code> . 但现在我们使用了模块联邦功能，它可以在 <code>container</code> 中<strong>定义新的入口文件</strong>，也就是我们之前提到的 ”像API一样暴露出一些组件“ 。</p><p>那么其他项目如何通过 <code>http</code> 请求使用UI库的组件呢？我们同样需要在项目的 <code>webpack.config.js</code> 文件中使用 <code>ModuleFederationPlugin</code> 声明需要使用的组件：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//webpack.config.js</span>
<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> ModuleFederationPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>container<span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./index.js&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token operator">...</span>
        <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;app.js&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">remotes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;@beautiful-ui&quot;</span><span class="token operator">:</span> <span class="token string">&#39;ui_lib@http://localhost:4000/ui.js&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 从前缀名为ui_lib的项目中读取 &quot;http://localhost:4000/ui.js&quot; 文件，将其作为 &quot;@beautiful-ui&quot; 模块引入。</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我们就可以像一个普通的组件一样使用UI库的组件了：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token keyword">as</span> BeautifulButton <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@beautiful-ui/components&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span> 
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            hello<span class="token punctuation">,</span>world
            <span class="token operator">&lt;</span>BeautifulButton <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
     <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但需要注意的是，远程组件的读取<strong>必须是异步的</strong>。否则你会看见一条报错信息：<em>Uncaught TypeError: Cannot read properties of undefined (reading &#39;call&#39;)</em> 。</p><p>如果想要将远程组件和本地项目一起启动，有一种方法是将整个项目作为一个异步项目启动。</p><p>我们知道引入一个异步项目可以这么做：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;/components/index.jsx&quot;</span><span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>因此，我们可以将入口文件通过这种方式引入：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// bootstrap.js  入口文件</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./src/App.jsx&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 动态引入</span>
<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">&#39;./bootstrap&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// import App from &#39;./src/App.jsx&#39;;</span>
<span class="token comment">// import React from &#39;react&#39;</span>
<span class="token comment">// import ReactDOM from &#39;react-dom&#39;</span>

<span class="token comment">// ReactDOM.render(</span>
<span class="token comment">//   &lt;App /&gt;,</span>
<span class="token comment">//   document.getElementById(&quot;root&quot;)</span>
<span class="token comment">// );</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lerna" tabindex="-1"><a class="header-anchor" href="#lerna" aria-hidden="true">#</a> lerna</h2>`,19),u={href:"https://lerna.js.org/",target:"_blank",rel:"noopener noreferrer"},d=a(`<p>到项目的根目录执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx lerna init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将我们的两个项目放到 <strong>packages</strong> 目录下。</p><p>在package.json中添加一些脚本：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;lerna&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.6.1&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack-module-federation-demo&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lerna run serve --scope ui-lib --scope app --parallel&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;bootstrap&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lerna bootstrap --hoist&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;clean&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lerna clean&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token property">&quot;workspaces&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;packages/*&quot;</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们来解释一下这些参数：</p><ul><li><code>workspaces : [&quot;packages/*&quot;]</code> : 表示我们的工作环境是 packages 文件夹下的所有文件夹</li><li><code>lerna run</code> : 表示对 lerna 会读取工作环境下文件夹的 <code>package.json</code> 文件，并执行其中的脚本，比如 <code>lerna run serve</code> 就是对每个文件夹执行 <code>npm run serve</code> 脚本。 <ul><li><code>--scope ui-lib</code> 表示指明文件夹名为 <code>ui-lib</code> .</li><li><code>--parallel</code> : 表示并行执行所有 npm 脚本命令。</li></ul></li><li><code>lerna bootstrap</code> : 表示在 <code>packages/*</code> 文件夹中安装依赖，相当于对每个文件夹执行 <code>npm install</code> 脚本。 <ul><li><code>--hoist</code> : <em>hoist</em> 意思是举起，将每个依赖”举起“到根目录下，用这个命令可以将所有依赖安装在根目录下，而不是每个子文件夹内。</li></ul></li><li><code>lerna clean</code> : 清楚 <code>node_modules</code> 文件夹</li></ul><p>现在我们只需要简单执行两条命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run bootstrap
<span class="token function">npm</span> run start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>UI库和app项目就安装好依赖自动启动了。</p><h2 id="项目源码" tabindex="-1"><a class="header-anchor" href="#项目源码" aria-hidden="true">#</a> 项目源码</h2><p>https://github.com/Lemonnnnnnnnnnn/webpack-module-federation-demo</p>`,12);function k(v,m){const e=t("ExternalLinkIcon");return o(),c("div",null,[r,s("p",null,[n("虽然微服务提供了我们各项目独立开发的能力，但有时候，我们需要同时部署多个项目，我们当然可以写脚本来执行部署过程。但有一个npm包"),s("a",u,[n("lerna"),l(e)]),n(" 可以帮我们做这件事情。")]),d])}const g=p(i,[["render",k],["__file","60.module-federation.html.vue"]]);export{g as default};
