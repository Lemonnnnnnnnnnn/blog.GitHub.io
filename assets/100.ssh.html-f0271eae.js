import{_ as e,p as s,q as o,a1 as c}from"./framework-c8e009f3.js";const d={},i=c('<p>系统： ubuntu20.04</p><h3 id="使用ssh需要安装什么软件包" tabindex="-1"><a class="header-anchor" href="#使用ssh需要安装什么软件包" aria-hidden="true">#</a> 使用ssh需要安装什么软件包？</h3><p>首先，我们应该明白，使用ssh连接需要分成<strong>客户端与接收方</strong>来讨论。 客户端是发起请求连接的一方，需要安装<code>ssh-client</code>（windows10和ubuntu都默认安装）。 接收方是接收请求的一方，需要安装<code>open-ssh</code>（需要主动安装）</p><h3 id="ssh是怎样进行连接的" tabindex="-1"><a class="header-anchor" href="#ssh是怎样进行连接的" aria-hidden="true">#</a> ssh是怎样进行连接的？</h3><ol><li>通过<code>ssh-keygen</code>指令生成自己的私钥与公钥，发送方与接收方各存一份。<strong>一般由客户端生成</strong></li></ol><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>ssh-keygen</code> 默认使用<code>rsa算法</code>进行加密，因此将生成</p><p><code>id_rsa</code> 私钥，<code>加密数据</code></p><p><code>id_rsa.pub</code> 公钥，<code>解密数据</code></p></div><ol start="2"><li><p>客户端发起请求，申请连接</p></li><li><p>接收方发送自己的<code>公钥</code>给客户端，并发送一串<code>随机字符串</code></p></li><li><p>客户端用<code>私钥</code>加密字符串，发送回接收方</p></li><li><p>接收方用<code>公钥</code>解密字符串，和初始值比较，若相等则解密成功，允许双方建立连接。</p></li></ol><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>将公钥发给服务端可以使用<code>ssh-copy-id</code>命令，非常方便，格式如下：</p><p><code>ssh-copy-id username@remote-server</code></p><p>如果是windows系统，用<code>git bash</code>来运行指令，<code>cmd和powerShell</code>不识别<code>ssh-copy-id</code>命令</p></div><h3 id="接收方会到哪里查找自己的公钥" tabindex="-1"><a class="header-anchor" href="#接收方会到哪里查找自己的公钥" aria-hidden="true">#</a> 接收方会到哪里查找自己的公钥？</h3><p>默认查找<code>~/.ssh/authorized_keys</code>文件。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>~/.ssh/config</code>中的配置如果和默认ssh配置(<code>/etc/ssh/sshd_config</code>)冲突</p><p>优先选用<code>~/.ssh/config</code>的配置</p></div><div class="custom-container warning"><p class="custom-container-title">注</p><ol><li>每一个用户都会有自己的<code>~/.ssh</code>文件夹，不要错误的认为一定是<code>/root/.ssh</code>路径</li><li>需要配置相关文件（夹）的权限</li></ol><ul><li>将.ssh目录的权限为700，<code>sudo chmod 700 ~/.ssh</code></li><li>将authorized_keys目录的权限为600 <code>sudo chmod 600 ~/.ssh/</code>authorized_keys</li></ul><ol start="3"><li>修改配置文件后需要用<code>service ssh restart</code>重启ssh服务</li></ol></div>',12),t=[i];function a(h,l){return s(),o("div",null,t)}const n=e(d,[["render",a],["__file","100.ssh.html.vue"]]);export{n as default};
