import{_ as e,M as t,p,q as o,R as s,t as n,N as c,a1 as l}from"./framework-c8e009f3.js";const i={},u=s("strong",null,"注解",-1),r=s("code",null,"@",-1),d={href:"/java/400.Spring.html",target:"_blank",rel:"noopener noreferrer"},k=l(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 使用@interface定义注解</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Report</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> <span class="token function">level</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;info&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 更多的情况下是通过 import 【框架.Report】 引入注解</span>

<span class="token comment">// 添加注解</span>
<span class="token annotation punctuation">@Report</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>框架背后对这些注释进行读取的方法被称为 <strong>反射（<em>Reflection</em>）</strong> ，框架可以通过 反射API 获取类实例的所有信息，包括其注解和内部方法、字段上的注解。如：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 获取Person定义的@Report注解:</span>
<span class="token class-name">Report</span> report <span class="token operator">=</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Report</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> type <span class="token operator">=</span> report<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> level <span class="token operator">=</span> report<span class="token punctuation">.</span><span class="token function">level</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function v(m,_){const a=t("ExternalLinkIcon");return p(),o("div",null,[s("p",null,[u,n(" 是以 "),r,n(" 开头的一种注释，放在类、方法、字段、参数的前面，通常由框架如"),s("a",d,[n("Spring"),c(a)]),n(" 进行读取并使用：")]),k])}const f=e(i,[["render",v],["__file","140.注解与反射.html.vue"]]);export{f as default};
