import{_ as e,p as l,q as o,a1 as i}from"./framework-c8e009f3.js";const d={},c=i(`<h2 id="常用基本操作" tabindex="-1"><a class="header-anchor" href="#常用基本操作" aria-hidden="true">#</a> 常用基本操作</h2><ul><li><code>vim .</code> ：展示当前目录下的文件列表</li><li><code>vim [文件夹]</code> : 展示目标文件夹下的文件列表</li><li><code>vim [文件名]</code> : 打开编辑文件</li></ul><h3 id="分页与导航" tabindex="-1"><a class="header-anchor" href="#分页与导航" aria-hidden="true">#</a> 分页与导航</h3><ul><li><code>:e .</code> : 展示当前目录下的文件列表，直接选择其他文件并打开编辑</li><li><code>:tabe .</code> : 展示当前目录下的文件列表，直接选择其他文件并在新的窗口打开编辑 <ul><li><code>gt</code> : 切换到下一分页</li><li><code>gT</code> : 切换到上一分页</li></ul></li></ul><h3 id="光标移动与定位" tabindex="-1"><a class="header-anchor" href="#光标移动与定位" aria-hidden="true">#</a> 光标移动与定位</h3><p><strong>页面移动</strong></p><ul><li><code>h\\j\\k\\l</code> : 左\\下\\上\\右 <ul><li><code>10j</code> : 向下移动10行</li></ul></li><li><code>G</code> : 页面底端</li><li><code>gg</code> ： 页面顶端</li><li><code>ctrl + d</code> : d = down ,向下移动半页</li><li><code>ctrl + u</code> : u = up , 向上移动半页</li><li><code>ctrl + f</code> : f = forward , 向下移动一页</li><li><code>ctrl + b</code> : b = back , 向上移动一页</li><li><code>zz</code> : 将页面移动到光标居中的位置</li><li><code>:{行数}</code> : 跳转到指定行数</li></ul><p><strong>行内移动</strong></p><ul><li><code>0</code> : 光标移到行首的前一个字母</li><li><code>^</code> : 光标移到行首的前一个字母，忽略空格</li><li><code>$</code> : 光标移到行尾的前一个字母，如123，定位到3<strong>之前</strong>的位置</li><li><code>g_</code> : 光标移到行尾的前一个字母 ，忽略空格</li><li><code>A</code> : 光标移动到行尾，<strong>并进入插入模式</strong>，如123，定位到3<strong>之后</strong>的位置并进入插入模式。</li></ul><p><strong>查找</strong></p><ul><li><code>/{字符串}</code>: <strong>从头查找</strong>所有匹配字符串 <ul><li><code>n</code> 查找下一个</li><li><code>N</code> 查找上一个。</li></ul></li><li><code>f{字符串}</code>: <strong>行内查找</strong> 移动到下一个匹配字符 <ul><li><code>;</code> : 重复执行上一次行内查找</li></ul></li></ul><h3 id="编辑" tabindex="-1"><a class="header-anchor" href="#编辑" aria-hidden="true">#</a> 编辑</h3><p><strong>进入编辑模式</strong></p><ul><li>按「<code>i</code>」在光标<strong>左边</strong>插入新的文本内容</li><li>按「<code>a</code>」在光标<strong>右边</strong>追加新的文本内容</li><li>按「<code>o</code>」进入插入模式后，是<strong>插入新的一行，从行首开始输入文字</strong>。</li></ul><p><strong>常用命令</strong></p><ul><li>「<code>yy</code>」：复制光标所在行到<strong>缓冲区</strong>，<strong>不等于ctrl + c</strong> ，必须配合<code>p</code> 指令才能进行输出</li><li>「<code>p</code>」：将<strong>缓冲区</strong>内的字符贴到光标所在位置。</li><li>「<code>dd</code>」：剪切光标所在行。</li><li>[<code>D</code>] : 从光标处删除到行尾。</li></ul><p><strong>撤回</strong></p><ul><li>「<code>u</code>」：u = undo , 撤回</li><li>「<code>ctrl + r</code>」：r = redo 反撤回</li></ul><p><strong>缩进</strong></p><ul><li><code>&gt;&gt;</code> : 缩进</li><li><code>&lt;&lt;</code> : 反缩进</li></ul><p><strong>常用复杂指令</strong></p><ul><li><code>:%s/{旧的文本}/{新的文本}/g</code> : 全局替换</li><li><code>:r {目标文件}</code> : 提取文件内所有文本并写入。用于快速写入测试数据。</li><li><code>:6,8t.</code> : 复制6-8行的文本到当前光标位置</li></ul><h3 id="选取" tabindex="-1"><a class="header-anchor" href="#选取" aria-hidden="true">#</a> 选取</h3><p><code>v</code> : v = visual : 进入可视模式，此模式下可进行选取。</p><ul><li><code>V</code> : 选取一行</li><li><code>ggVG</code> : 等于 <code>ctrl + a</code> ， 全部选取</li><li><code>vi(</code> : i = inner , 选取括号内的文字</li><li><code>v2i(</code> : 选取第二层括号内的文字</li><li><code>vit</code> : t = tag , 选取html文件中标签内的文字，如 <code>&lt;div&gt;213&lt;/div&gt;</code> 选取213</li><li><code>vat</code> : a = all , 选取包含标签的整个元素</li><li><code>vi&quot;</code> : 选取引号内的文字</li></ul><p><strong>操作</strong></p><ul><li><code>y</code> ：复制选中内容</li><li><code>d</code> : 剪切选中内容</li><li><code>p</code> : 用缓冲区内的内容进行替换</li></ul><h3 id="退出" tabindex="-1"><a class="header-anchor" href="#退出" aria-hidden="true">#</a> 退出</h3><p><code>esc</code>: 退出当前模式</p><ul><li><code>q!</code> ：不存盘强制退出编辑器</li><li><code>wq</code> ：存盘并退出编辑器</li></ul><h3 id="书签" tabindex="-1"><a class="header-anchor" href="#书签" aria-hidden="true">#</a> 书签</h3><ul><li><code>:[小写字母]</code> : 记录当前光标位置到<strong>当前文件</strong>所属的寄存器中，用[小写字母]指代</li><li><code>:[大写字母]</code> : 记录当前光标位置到<strong>全局文件</strong>所属的寄存器中，用[大写字母]指代，用于<strong>跨文件索引</strong></li><li>\`\`[字母]\` ：回到字母所在光标位置</li><li>\`\` : 从书签位置回到跳转之前的位置</li></ul><h3 id="巨集" tabindex="-1"><a class="header-anchor" href="#巨集" aria-hidden="true">#</a> 巨集</h3><p>用于记录一套复杂的操作并复用。</p><ul><li><code>q[字母][操作集]q</code> : 以[字母]指代录制的操作集</li><li><code>@[字母]</code> : 执行操作集</li><li><code>8@[字母]</code> : 执行操作集8次</li></ul><p>例如我有一组数据：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>msg <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token class-name">Param1</span>
  <span class="token class-name">Param2</span>
  <span class="token class-name">Param3</span>
  <span class="token class-name">Param4</span>
  <span class="token class-name">Param5</span>
  <span class="token class-name">Param6</span>
  <span class="token class-name">Param7</span>
  <span class="token class-name">Param8</span>
<span class="token punctuation">}</span>

这是一个字符串数组，我想将每一个数组元素加上引号和逗号。我可以先记录一行操作：

\`\`\`bash
qa<span class="token operator">^</span>i<span class="token string">&quot;[esc]A&quot;</span><span class="token punctuation">,</span><span class="token punctuation">[</span>esc<span class="token punctuation">]</span>jq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后用 <code>@a</code> 执行录制的操作集即可。</p><p>看上去命令比较复杂，但我们在录制操作集的时候并不是盲打的，我们只要随意完成一行操作并把它记录下来即可，哪怕用左右键一个个位置移动光标都无所谓。</p><p>唯一容易犯错的点是<strong>注意换行</strong>，否则无法进行批量操作，如<code>5@a</code>。</p><h2 id="插件" tabindex="-1"><a class="header-anchor" href="#插件" aria-hidden="true">#</a> 插件</h2>`,41),a=[c];function n(s,r){return l(),o("div",null,a)}const u=e(d,[["render",n],["__file","20.vim.html.vue"]]);export{u as default};
