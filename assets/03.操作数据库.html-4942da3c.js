import{_ as s,p as n,q as a,a1 as e}from"./framework-c8e009f3.js";const p={},t=e(`<h2 id="选择" tabindex="-1"><a class="header-anchor" href="#选择" aria-hidden="true">#</a> 选择</h2><p>切换数据库： <code>USE DATABASE_NAME</code></p><h2 id="创建" tabindex="-1"><a class="header-anchor" href="#创建" aria-hidden="true">#</a> 创建</h2><ul><li>创建数据库： <code>CREATE DATABASE 数据库名;</code></li><li>创建表：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>
  id <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span> <span class="token comment">--- 设置自增id</span>
  列名 数据类型  <span class="token operator">NOT</span> <span class="token boolean">NULL</span>， <span class="token comment">--- 设置其他数据类型</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token comment">--- 设置主键 </span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 <span class="token comment">--- 设置引擎和编码，一般不变动</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建时经常要校验数据库/表是否已存在： <code>CREATE DATABASE IF NOT EXISTS 数据库名;</code></li></ul><h2 id="插入" tabindex="-1"><a class="header-anchor" href="#插入" aria-hidden="true">#</a> 插入</h2><p>基本格式：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token punctuation">(</span>列名一，列名二 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>列值一，列值二<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
<span class="token comment">--- 例</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> students <span class="token punctuation">(</span>class_id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> score<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;大牛&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>所有列必须给定值。</p><p>有默认值的字段可以不被列出，比如自增字段id。</p></div><p>一次添加多条记录：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> students <span class="token punctuation">(</span>class_id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> score<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>
  <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;大宝&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;二宝&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="insert-ignore-into" tabindex="-1"><a class="header-anchor" href="#insert-ignore-into" aria-hidden="true">#</a> INSERT IGNORE INTO</h4><p>更多时候我们会指定主键进行插入，而不是使用递增组件。一个常见的场景就是用户列表，我们希望没有该用户时用一个唯一识别码创建该用户，有该用户时忽略这条命令，因此我们需要 <code>INSERT IGNORE INTO</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">--- 格式</span>
<span class="token keyword">INSERT</span> <span class="token keyword">IGNORE</span> <span class="token keyword">INTO</span> 表名 <span class="token punctuation">(</span>主键 ， 列名<span class="token number">1</span>，列名<span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>主键值， 值<span class="token number">1</span> ， 值<span class="token number">2</span> <span class="token punctuation">)</span>
<span class="token comment">--- 例</span>
<span class="token keyword">INSERT</span> <span class="token keyword">IGNORE</span> <span class="token keyword">INTO</span> students <span class="token punctuation">(</span>id<span class="token punctuation">,</span> class_id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> score<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;小明&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">--- 若id=1的记录不存在，INSERT语句将插入新记录，否则不执行</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改" tabindex="-1"><a class="header-anchor" href="#修改" aria-hidden="true">#</a> 修改</h2><h3 id="修改记录" tabindex="-1"><a class="header-anchor" href="#修改记录" aria-hidden="true">#</a> 修改记录</h3><h4 id="update" tabindex="-1"><a class="header-anchor" href="#update" aria-hidden="true">#</a> UPDATE</h4><p>基本格式：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> 表名 <span class="token keyword">SET</span> 字段<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span>，字段二<span class="token operator">=</span>值<span class="token number">2</span> <span class="token keyword">WHERE</span> 条件 
<span class="token comment">--- 例如：</span>
<span class="token keyword">UPDATE</span> students <span class="token keyword">SET</span> name<span class="token operator">=</span><span class="token string">&#39;大牛&#39;</span><span class="token punctuation">,</span> score<span class="token operator">=</span><span class="token number">66</span> <span class="token keyword">WHERE</span> id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新字段可以操作原来的数值：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> students <span class="token keyword">SET</span> score<span class="token operator">=</span>score<span class="token operator">+</span><span class="token number">10</span> <span class="token keyword">WHERE</span> score<span class="token operator">&lt;</span><span class="token number">80</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>如果UPDATE语句没有WHERE条件，那么整个表的记录都会被更新</p></div><h4 id="replace" tabindex="-1"><a class="header-anchor" href="#replace" aria-hidden="true">#</a> REPLACE</h4><p><code>REPLACE</code> 语句和 <code>UPDATE</code>语句不一样的地方在于：UPDATE直接在原记录上进行修改，而REPLACE则是删除这一行记录并插入新纪录。两者都可以实现修改记录：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">--- 基本格式：</span>
<span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> 表名（主键，列名<span class="token number">1</span>，列名<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>） <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>主键值，值<span class="token number">1</span> ， 值<span class="token number">2</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
<span class="token comment">--- 例：</span>
<span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> students <span class="token punctuation">(</span>id<span class="token punctuation">,</span> class_id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> score<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;小明&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><ol><li>UPDATE不需要更新所有列名，但REPLACE本质上是新增一条数据，需要提供所有列名的值</li><li>REPLACE是根据主键来识别需要替换的行的，如果主键不存在，则会新增一条记录</li></ol></div><h3 id="修改表" tabindex="-1"><a class="header-anchor" href="#修改表" aria-hidden="true">#</a> 修改表</h3><p>如果你想要给表新增一列数据：需要使用如下命令：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> 列名 数据类型 <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token comment">--- 例如</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> students <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> birth <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改列名：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 CHANGE <span class="token keyword">COLUMN</span> 旧列名 新列名 数据类型  <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token comment">--- 例：</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> students CHANGE <span class="token keyword">COLUMN</span> birth birthday <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除一列：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> 列名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> 删除</h2><h4 id="删除数据库和表" tabindex="-1"><a class="header-anchor" href="#删除数据库和表" aria-hidden="true">#</a> 删除数据库和表：</h4><div class="language-SQL line-numbers-mode" data-ext="SQL"><pre class="language-SQL"><code>DROP DATABASE  IF EXISTS 数据库名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="删除记录" tabindex="-1"><a class="header-anchor" href="#删除记录" aria-hidden="true">#</a> 删除记录</h4><div class="language-SQL line-numbers-mode" data-ext="SQL"><pre class="language-SQL"><code>--- 基本结构：
DELETE FROM &lt;表名&gt; WHERE ...;
--- 例如
DELETE FROM students WHERE id=1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="快照" tabindex="-1"><a class="header-anchor" href="#快照" aria-hidden="true">#</a> 快照</h2><p>快照实际上就是把当前表的数据复制到一个新表中：<code>CREATE TABLE</code> 和 <code>SELECT</code> 语句组合起来就能够实现这个功能</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 新表 <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 旧表
<span class="token comment">--- 通常会附带条件语句（只需要旧表的某些数据）,例：</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> students_of_class1 
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> students 
<span class="token keyword">WHERE</span> class_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="写入查询结果集" tabindex="-1"><a class="header-anchor" href="#写入查询结果集" aria-hidden="true">#</a> 写入查询结果集</h2><p>实际上， 不仅是 <code>CREATE TABLE</code> ， <code>SELECT</code> 可以和许多语句合用，比如 插入语句 <code>INSERT INTO</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">--- 向统计表 statistics 写入 各班的平均成绩</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">statistics</span> <span class="token punctuation">(</span>class_id <span class="token punctuation">,</span> average<span class="token punctuation">)</span> 
<span class="token keyword">SELECT</span> class_id <span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span> 
<span class="token keyword">FROM</span> STUDENT
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> class_id <span class="token comment">--- 按class_id来进行分组,一班的平均成绩，二班的平均成绩...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45),o=[t];function c(l,i){return n(),a("div",null,o)}const r=s(p,[["render",c],["__file","03.操作数据库.html.vue"]]);export{r as default};
