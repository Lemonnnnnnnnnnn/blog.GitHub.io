import{_ as r,M as l,p as s,q as i,R as e,t as n,N as a,a1 as o}from"./framework-c8e009f3.js";const h={},c=o('<h1 id="项目经验" tabindex="-1"><a class="header-anchor" href="#项目经验" aria-hidden="true">#</a> 项目经验</h1><h3 id="为什么前端项目部署上服务器后-浏览器访问目标网页无法访问最新的页面" tabindex="-1"><a class="header-anchor" href="#为什么前端项目部署上服务器后-浏览器访问目标网页无法访问最新的页面" aria-hidden="true">#</a> <strong>为什么前端项目部署上服务器后，浏览器访问目标网页无法访问最新的页面？</strong></h3><p>**原因：**如果文件名相同，浏览器会优先使用已经缓存好的文件文档加快网页的访问速度。</p><p>**解决方法：**如果使用了<code>webpack</code>打包工具，请在配置文件中添加 <em>hash</em> 值，让新旧文件名称不同，使浏览器获取最新文件数据。</p><h3 id="为什么本地项目开发、打包正常-在服务器进行打包部署则发生错误" tabindex="-1"><a class="header-anchor" href="#为什么本地项目开发、打包正常-在服务器进行打包部署则发生错误" aria-hidden="true">#</a> <strong>为什么本地项目开发、打包正常，在服务器进行打包部署则发生错误？</strong></h3><p>MAC、Windows都是<strong>大小写不敏感</strong>的，而Linux大小写敏感，如果有文件名大写而援引代码小写的情况，则可能出现在远程服务器端报错的情况</p><h2 id="多表单系统" tabindex="-1"><a class="header-anchor" href="#多表单系统" aria-hidden="true">#</a> 多表单系统</h2><h3 id="用户体验优化问题——缓存。" tabindex="-1"><a class="header-anchor" href="#用户体验优化问题——缓存。" aria-hidden="true">#</a> <strong>用户体验优化问题——缓存。</strong></h3><p>**场景：**在具有大量表单的项目中（例如后台管理系统），反复对大表单进行增删改查会给用户带来巨大的不便，因此缓存功能对这种系统来说是一个必不可少的功能。</p><p><strong>解决方法：</strong></p>',10),d=e("li",null,"使用Tab页标签设计，在用户必须跳转去其他页面的时候用Tab标签将原先的数据表单作为一个标签保存下来。",-1),_=e("li",null,[n("在 "),e("em",null,"Vue"),n(" 中使用"),e("code",null,"keep-alive"),n("标签对表单数据进行缓存")],-1),u=e("em",null,"React",-1),p=e("em",null,"React-router",-1),m=e("em",null,"npm",-1),f={href:"https://www.npmjs.com/package/react-router-cache-route",target:"_blank",rel:"noopener noreferrer"},g=e("em",null,"react-router-cache-route",-1),x=e("em",null,"npm",-1),b={href:"https://www.npmjs.com/package/react-keep-alive",target:"_blank",rel:"noopener noreferrer"},k=e("em",null,"React",-1),w=e("code",null,"Context",-1),v=e("p",null,[e("strong",null,[n("为什么你应该少使用 "),e("em",null,"localStorage"),n(" ？")])],-1),A=e("p",null,[n("版本以固定周期迭代更新是许多互联网公司的产品特点。在小版本的不断迭代中，会发生许多难以预料的问题，*"),e("code",null,"localStorage"),n("*是永久性的存储，你很难知道若干版本后的系统和若干版本前的缓存数据是否会发生一些奇妙的化学反应。")],-1),E=e("h3",{id:"如何防止重复点击导致的表单重复提交",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#如何防止重复点击导致的表单重复提交","aria-hidden":"true"},"#"),n(" 如何防止重复点击导致的表单重复提交？")],-1),N=e("li",null,[n("使用"),e("strong",null,"节流函数"),n("包裹表单提交函数，比如 "),e("em",null,"lodash"),n(" 库中的**"),e("code",null,"_.throttle(func, [wait=0], [options=])"),n("。**它将返回一个在 wait 秒内最多执行 "),e("code",null,"func"),n("一次的函数。")],-1),S={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API",target:"_blank",rel:"noopener noreferrer"},z=e("code",null,"AbortController",-1),C={href:"https://swr.vercel.app/zh-CN",target:"_blank",rel:"noopener noreferrer"},I=o('<h2 id="代码规范" tabindex="-1"><a class="header-anchor" href="#代码规范" aria-hidden="true">#</a> 代码规范</h2><p>善用代码分析工具 <em>eslint</em> ， 其至少有两个明显的好处：</p><ul><li>搭配IDE实现智能代码提示</li><li>对于一个持续增长的项目来说，使用一套配置（可以使用拓展extend引入）保证新旧文件的代码风格一致，对后续的研发人员继续开发是十分有好处的。</li></ul><h2 id="新项目的开发" tabindex="-1"><a class="header-anchor" href="#新项目的开发" aria-hidden="true">#</a> 新项目的开发</h2><p>使用如 <em>mockjs</em> 等模拟库生成随机数据并拦截Ajax请求，一是可以不用麻烦后端同学造假数据，二是可以提前对大量数据等情况的样式进行调整。</p><h2 id="关于seo-search-engine-optimization" tabindex="-1"><a class="header-anchor" href="#关于seo-search-engine-optimization" aria-hidden="true">#</a> 关于SEO（Search Engine optimization）</h2><p>如果项目对SEO有需求，如企业官网或个人博客，那么填充数据采取传统请求方式进行获取不是一个好办法，因此搜索引擎进行爬取时里面的数据还是空的，搜不到。</p><p>对于这种需求可以采用 <em>next.js</em> 等支持服务端渲染的框架进行开发的SEO方法。</p><h1 id="人事面" tabindex="-1"><a class="header-anchor" href="#人事面" aria-hidden="true">#</a> 人事面</h1><ol><li>加班福利补贴</li><li>多久一涨工资</li><li>除了保险有没有餐补、车补、全勤奖</li></ol>',10);function R(j,V){const t=l("ExternalLinkIcon");return s(),i("div",null,[c,e("ul",null,[d,_,e("li",null,[n("在 "),u,n(" 中，有两种解决方案： "),e("ul",null,[e("li",null,[n("大部分框架的路由系统都是基于 "),p,n(" 实现的，有一个"),m,n(" 包 "),e("a",f,[g,a(t)]),n(" 可以实现基于路由项的数据缓存。")]),e("li",null,[n("使用 "),x,n(" 包 *"),e("em",null,[e("strong",null,[e("a",b,[n("*React Keep Alive"),a(t)])])]),n(" 来实现和keep-alive类似的缓存功能，因为其原理是使用 "),k,n(" 中的 "),w,n(" 属性进行实现，因此至少需要React 版本≥ 16.3。")])])])]),v,A,E,e("ul",null,[N,e("li",null,[n("到你所使用的网络请求库中寻找答案，如 "),e("em",null,[e("a",S,[n("fetch API"),a(t)])]),n(" 中就有一个"),z,n(" 方法，可以用于取消一个Web请求，Axios等库中也有类似的方法。还有一些请求库已经预先做了请求去重的底层方法，如"),e("a",C,[n("swr"),a(t)]),n("。")])]),I])}const L=r(h,[["render",R],["__file","05. 面试.html.vue"]]);export{L as default};
