import{_ as n,p as s,q as a,a1 as t}from"./framework-c8e009f3.js";const p={},e=t(`<h2 id="重复请求去重的坑" tabindex="-1"><a class="header-anchor" href="#重复请求去重的坑" aria-hidden="true">#</a> 重复请求去重的坑</h2><p>在生产环境下，我们常常需要携带用户的信息进行请求，<code>cookie或是access_token</code>。那么我们假设这样一种情况。</p><ul><li>进入某个页面时，我们需要携带<code>access_token</code>进行请求数据，但<code>access_token</code>过期了，请求失败。</li><li>手动获取<code>access_token</code>，并更新本地的<code>access_token</code></li><li>根据新的<code>access_token</code>重新获取数据</li></ul><p>根据swr的模式，我们将请求数据放在子组件中进行管理</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Data</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// GraphQL 搜索语言</span>
  <span class="token keyword">var</span> query <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    query ($id: Int) { # Define which variables will be used in the query (id)
      Media (id: $id, type: ANIME) { # Insert our variables into the query arguments (id) (type: ANIME is hard-coded in the query)
        id
        title {
          romaji
          english
          native
        }
      }
    }
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

  <span class="token comment">// 用于query中的id参数</span>
  <span class="token keyword">var</span> variables <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">15125</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// 请求头</span>
  <span class="token keyword">const</span> headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;Accept&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;Authorization&#39;</span><span class="token operator">:</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;accessToken&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>


  <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&#39;https://graphql.anilist.co&#39;</span><span class="token punctuation">,</span>
    options <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">query</span><span class="token operator">:</span> query<span class="token punctuation">,</span>
        <span class="token literal-property property">variables</span><span class="token operator">:</span> variables<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      headers<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// 发出请求，获取数据</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSWRImmutable</span><span class="token punctuation">(</span><span class="token punctuation">[</span>url<span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">,</span> fetcher<span class="token punctuation">)</span>   
  <span class="token comment">// const { data } = useSWRImmutable(url, () =&gt; fetcher(url, options))</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>loading<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>errors<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>errors<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>message<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Media<span class="token punctuation">.</span>title<span class="token punctuation">.</span>english<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们手动获取一个有效的<code>token</code>，并给出一个按钮手动更新，更新完成后重新渲染组件，重新发出请求</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Oauth</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>ignored<span class="token punctuation">,</span> forceUpdate<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span><span class="token parameter">num</span> <span class="token operator">=&gt;</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 手动获取的有效token</span>
    <span class="token keyword">const</span> accessToken <span class="token operator">=</span> <span class="token string">&#39;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjA1OGQ1NDI4N2EzYjU2OWRkOWY5YmE5YzZiYzZlNWYxMzI4ZmFlZThhOWZiNjJkYTQ0OTI0ZjIxYTMzYWIyYWM2YjVkNjk3OWViNzIzYTY1In0.eyJhdWQiOiI4MTQ3IiwianRpIjoiMDU4ZDU0Mjg3YTNiNTY5ZGQ5ZjliYTljNmJjNmU1ZjEzMjhmYWVlOGE5ZmI2MmRhNDQ5MjRmMjFhMzNhYjJhYzZiNWQ2OTc5ZWI3MjNhNjUiLCJpYXQiOjE2NTA5NDE4OTUsIm5iZiI6MTY1MDk0MTg5NSwiZXhwIjoxNjgyNDc3ODk1LCJzdWIiOiI1ODM5NjkzIiwic2NvcGVzIjpbXX0.D9G8OIKKm9NV-RS4_ZwWbt_RLekBuQ8_H3CoXxdO6pMVrpr2jc6pdtHJhNjLvjAlpppdVOwodhCNYbQVudeiwODf1-754wjk7-dEwgqIqRN4i2G8ikrLIJPpfI8ypGVKgAuuu8h66xJO16R5x2raK9azNfHjuVLfmDEJV_bY14VdEpiPymnd9JGcMiwPEuZXbhp-fhm_HqtvF6b25q0E4ZBp8zGDDJfM67FfvwQD-WYKYZRENQfXQIAvQHFwyrq7ZPEuIgBchMiIxHdOJ9_19bvfjyuJYY2mP1HivXk56nC19iDVN2aojUMw9o0gvaucdzXD5qI7khmAinue0yB9zTpqqe2q6VhrOGtba-mymZSQh5McZ5UQmqEVwBpL8MyNQNffjD72nm4F4EtRgIjyJC5i3k8NdRubvHO7GP9Z5vE2q5bKDKIRe-nIw9GVl_AoyX9krPLtDcrPvSws3VvZjNLna3Mob1YP0TRNI7DAfkE34qPdzZq5Aa5A0CyCILB1KPalDB89-ehWB99thJecyVujykggPXDylsyBuFzmSTvTHIC9xPthUlqwrpq6tOkvVqUusAfBjKhbkV_na2zqiddKH47aukgSrtgEBgD_JqahB-uKCCtshZYDeRzlL6n3E9YHC_FwTTy5yO5XwQHg9eESDShp4CzHpx7S6-4cp04&#39;</span>
    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;accessToken&#39;</span><span class="token punctuation">,</span> accessToken<span class="token punctuation">)</span><span class="token comment">// 本地存储</span>
    <span class="token function">forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 强制刷新</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>getToken<span class="token punctuation">}</span><span class="token operator">&gt;</span>模拟获取token<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Data <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们先采用第一种传参方式，发现我们携带token的第二次请求没有成功发出</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSWRImmutable</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fetcher</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://linyc.oss-cn-beijing.aliyuncs.com/bad.gif" alt=""></p><p>原因是useSwr的<code>缓存key值</code>是url地址，虽然请求的头部不同，但key值相同，所以swr决定使用缓存的数据，并不发出第二次请求。</p><p><strong>正确的做法是：将参数和url地址包裹在一个数组中传入useSwr方法。</strong>，将<code>header</code>等参数一同作为key值来缓存，可以识别出两次请求是不同的请求。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSWRImmutable</span><span class="token punctuation">(</span><span class="token punctuation">[</span>url<span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">,</span> fetcher<span class="token punctuation">)</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://linyc.oss-cn-beijing.aliyuncs.com/good.gif" alt=""></p>`,14),o=[e];function c(i,l){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","08.传入参数.html.vue"]]);export{u as default};
