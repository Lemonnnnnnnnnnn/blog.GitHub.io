import{_ as t,M as e,p as c,q as o,R as s,t as n,N as p,a1 as l}from"./framework-c8e009f3.js";const i={},u=l(`<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.color1</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.color2</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color1 color2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color2 color1 <span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>是读取第一个属性，后续属性默认舍弃？</p><p>还是读取最后一个属性将前面的属性覆盖？</p><p><img src="https://linyc.oss-cn-beijing.aliyuncs.com/class_priority.png" alt=""></p><p>答案都不对，和 <code>class</code> 中的样式名字前后没有关系，而和<code>css</code>文件中编写样式的顺序有关。因为color2是<code>css</code>文件中的最后一个相关样式，所以两次渲染的结果都是蓝色。</p>`,6),r={href:"https://www.notion.so/Css-de02bfc4928d4f7da7c99e0fd9ce059c",target:"_blank",rel:"noopener noreferrer"},d=s("em",null,[s("strong",null,"右侧或底部的CSS代码具有更高的优先级，将被应用")],-1),k=s("p",null,[s("img",{src:"https://linyc.oss-cn-beijing.aliyuncs.com/css_priority.png",alt:""})],-1);function _(v,m){const a=e("ExternalLinkIcon");return c(),o("div",null,[u,s("p",null,[n("这是由CSS规则树和DOM树的"),s("a",r,[n("匹配原则"),p(a)]),n("决定的。下图的左边一列即为相关的匹配原则。"),d,n("。")]),k])}const b=t(i,[["render",_],["__file","20.多个属性值优先展示哪一个？.html.vue"]]);export{b as default};
