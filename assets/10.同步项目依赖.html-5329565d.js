import{_ as e,p as t,q as r,a1 as i}from"./framework-c8e009f3.js";const a={},c=i('<h1 id="pipreqs" tabindex="-1"><a class="header-anchor" href="#pipreqs" aria-hidden="true">#</a> pipreqs</h1><p><code>pipreqs</code>用于生成<strong>当前项目有用到的依赖</strong></p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><p><code>pip install pipreqs</code></p><h3 id="生成requirement-txt" tabindex="-1"><a class="header-anchor" href="#生成requirement-txt" aria-hidden="true">#</a> 生成requirement.txt</h3><p><code>pipreqs . --encoding=utf-8 --force</code></p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p><code>pipreqs</code>会遍历文件，查找引用的外部包，并写入<code>reqirement.txt</code></p><p>但是并不会写入<strong>第三方包中引用的第三方包</strong></p><p>对于这种情况，我们只能用<code>pip freeze</code>命令查看本地安装的所有包的版本号，并手动添加进<code>reqirement.txt</code></p></div><h3 id="根据requirements-txt安装依赖" tabindex="-1"><a class="header-anchor" href="#根据requirements-txt安装依赖" aria-hidden="true">#</a> 根据requirements.txt安装依赖</h3><p><code>pip install -r requirements.txt</code></p>',9),n=[c];function d(o,s){return t(),r("div",null,n)}const h=e(a,[["render",d],["__file","10.同步项目依赖.html.vue"]]);export{h as default};
